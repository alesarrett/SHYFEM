#!/bin/sh
#
# shell for tagging cvs modules in a consistent way

#########################################################

FEMDIR=${FEMDIR:-$HOME/fem}
export FEMDIR
version_file="VERSION"

#########################################################

ok()
{
  if [ -z "$1" ]; then
    question="Is this ok (y/N) : "
  else
    question=$1
  fi

  echo
  echo -n "$question"
  read answer

  if [ x.$answer = x."y" ]; then
    :
  else
    exit 0
  fi
}

date2num()
{
#  echo $1 | sed 's/\(.*\)-\(.*\)-\(.*\)/\3\2\1/'
  echo $1 | sed 's/\(.*\)-\(.*\)-\(.*\)/\3\2\1/'
}

editfiles()
{
  lastline=`tail -1 $version_file`
  echo
  echo "You can enter other files to edit before tagging."
  echo "This may be used for logging the new version."
  if [ -n "$lastline" ]; then
    echo "Recommended files: $lastline"
  fi
  #echo "Example: subver.f or similar."
  echo

  while :
  do

    echo -n "Enter file name to edit ( <CR> to end ) : "
    read file

    if [ -n "$file" ]; then
      vi $file
    else
      break
    fi

  done
}

Usage()
{
  echo ""
  echo "Usage: cvstag version"
  echo ""
  echo "   (example: cvstag 3.51  or  cvstag 3.51a)"
  echo ""
  if [ $# -ne 1 ]; then
    echo "Actual version : "
    echo "   Version : $2"
    echo "   Date    : $3"
    echo "   Tag     : $4"
    echo ""
  fi
}

#########################################################
tmpfile=tmp0.tmp
tmpfile1=tmp1.tmp
tmpfile2=tmp2.tmp
#########################################################

if [ ! -f $version_file ]; then
  #echo "No file $version_file -> please create first"
  #exit 2
  echo "Creating file $version_file ..."
  touch $version_file
else
  firstline=`head -1 $version_file | sed 's/ \{1,\}/ /g'`
fi

if [ $# -ne 1 ]; then
  Usage $firstline
  exit 1
else
  newvers=$1
fi

#########################################################

v=`echo $newvers | sed 's/\./_/g'`
newtag=VERS_$v

newdate=`date +"%d-%m-%Y"`

actvers=`echo $firstline | cut -d" " -f2`
actdate=`echo $firstline | cut -d" " -f3`
acttag=`echo $firstline | cut -d" " -f4`

comparedate=`date2num $actdate`
#comparedate=`expr $comparedate + 1`

#echo $newdate $actdate $comparedate
#echo $newvers $newtag - $actvers $acttag

#########################################################

echo
echo "Actual version :"
echo $actvers "     " $actdate
echo
echo "New version :"
echo $newvers "     " $newdate
echo 

ok

#########################################################

cvscommit -nolog
editfiles
#cvscommit -m "New version $newvers"

#########################################################

echo
echo "Checking revision log ..."
echo 

revisionlog -after $comparedate *.[cfFh] > $tmpfile
if [ -f $version_file ]; then
  revisionlog_adjust.pl $tmpfile $version_file > $tmpfile2
fi
cat $tmpfile2

ok

#########################################################

exec 4<&1     # save original stdout
exec > $tmpfile1

echo "version  $newvers    $newdate    $newtag"
echo
echo -n "=========================================================="
echo " $newdate - $newvers"
echo
cat $tmpfile2
echo
echo "=========================================================="
echo
cat $version_file

exec 1<&4     # restore original stdout

vi $tmpfile1

#########################################################

ok "Shall I tag now ? (y/N) : "

cp $tmpfile1 $version_file

cvscommit -auto -m "New version $newvers"
touch $version_file
cvs tag $newtag

rm -f $tmpfile $tmpfile1 $tmpfile2

#########################################################

