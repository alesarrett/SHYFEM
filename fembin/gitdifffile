#!/bin/sh
#
# returns changed files given start and end tag
#
#--------------------------------------------------------

GetFilePrefix()		#gets prefix to findf right directory
{
  actdir=`pwd`
  cd ./$(git rev-parse --show-cdup)
  gitroot=`pwd`
  cd $actdir

  prefix=`echo $actdir | perl -pe "s|^$gitroot||" | perl -pe "s|^/||"`
  #echo "prefix: $prefix    ($actdir  $gitroot)"
}

ErrorOption()
{
  echo "No such option : $1"
}

Usage()
{
  echo "Usage: gitdifffile [-help|-h] [-options] file [ start-tag [ end-tag ] ]"
}

FullUsage()
{
  Usage
  echo "    gives info on changes in file"
  echo "    with no start tag start from first available tag"
  echo "    with no end tag go to last available tag"
  echo "    options:"
  echo "       -h|-help    this info"
  echo "       -write      writes changed versions of file"
  echo "       -writeall   writes all versions (changed or not)"
}

writefile="NO"
writeall="NO"

while [ -n "$1" ]
do
   case $1 in
        -write)         writefile="YES";;
        -writeall)      writeall="YES";;
        -h|-help)       FullUsage; exit 0;;
        -*)             ErrorOption $1; exit 1;;
        *)              break;;
   esac
   shift
done

[ $writeall = "YES" ] && writefile="YES"

if [ $# -eq 0 ]; then
  Usage
  exit 0
fi

#--------------------------------------

file=$1
start=$2
end=$3

GetFilePrefix

name=`basename $file`

echo "looking for file $file  ($name)"
echo "   start tag: $start"
echo "     end tag: $end"
echo ""

if [ $name != $file ]; then
  echo "Please be sure to not use any path to the file"
  exit 1
fi
if [ ! -f $name ]; then
  echo "no such file: $name"
  echo "be sure you are in the directory of the requested file"
  exit 1
fi

#--------------------------------------

intags="NO"
[ -z "$start" ] && intags="YES"

tags=`gittags -tagsonly`
first="YES"
exists="NO"

for tag in $tags
do
  [ "$start" = $tag ] && intags="YES"

  if [ $intags = "YES" ]; then		#process tags
    echo -n "checking tag: $tag  "
    git show $tag:$prefix/$file > tmp.tmp 2> err.tmp
    status=$?
    if [ $status -eq 128 ]; then	#file in this version not exisiting
      :
      echo -n "  ...not existing"
    elif [ $status -ne 0 ]; then	# not identified error
      echo "$status: error getting file... aborting"
      exit 1
    else
      exists="YES"
    fi
    write="NO"
    if [ $exists = "YES" ]; then
      if [ $first = "YES" -o $writeall = "YES" ]; then
        write="YES"
        first="NO"
      else
        cmp --quiet tmp.tmp $lastfile
        status=$?
        #echo "status: $status"
        [ $status -ne 0 ] && write="YES"
        [ $status -gt 1 ] && (echo "error comparing files: $lastfile"; exit 1)
      fi
    fi
    if [ $write = "YES" ]; then
      new=${name}_$tag.rev
      if [ $writefile = "YES" ]; then
        echo -n "  ...writing $new"
      else
        echo -n "  ...changed"
      fi
      mv tmp.tmp  $new
      lastfile=$new
    fi
    echo ""
  fi

  [ "$end" = $tag ] && intags="NO"
done

[ -f tmp.tmp ] && rm -f tmp.tmp
[ -f err.tmp ] && rm -f err.tmp
[ $writefile = "NO" ] && rm -f ${name}_*.rev
